#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Boom_Manager_Project.DataBaseClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BoomDB2")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount_savings_t(account_savings_t instance);
    partial void Updateaccount_savings_t(account_savings_t instance);
    partial void Deleteaccount_savings_t(account_savings_t instance);
    partial void Insertwithdrow_money_t(withdrow_money_t instance);
    partial void Updatewithdrow_money_t(withdrow_money_t instance);
    partial void Deletewithdrow_money_t(withdrow_money_t instance);
    partial void Insertcash_t(cash_t instance);
    partial void Updatecash_t(cash_t instance);
    partial void Deletecash_t(cash_t instance);
    partial void Insertclient_info_t(client_info_t instance);
    partial void Updateclient_info_t(client_info_t instance);
    partial void Deleteclient_info_t(client_info_t instance);
    partial void Insertclients_per_session_t(clients_per_session_t instance);
    partial void Updateclients_per_session_t(clients_per_session_t instance);
    partial void Deleteclients_per_session_t(clients_per_session_t instance);
    partial void Insertdays_sessions_t(days_sessions_t instance);
    partial void Updatedays_sessions_t(days_sessions_t instance);
    partial void Deletedays_sessions_t(days_sessions_t instance);
    partial void Insertdevice_endpoints_t(device_endpoints_t instance);
    partial void Updatedevice_endpoints_t(device_endpoints_t instance);
    partial void Deletedevice_endpoints_t(device_endpoints_t instance);
    partial void Insertdevices_t(devices_t instance);
    partial void Updatedevices_t(devices_t instance);
    partial void Deletedevices_t(devices_t instance);
    partial void Insertdiscounts_t(discounts_t instance);
    partial void Updatediscounts_t(discounts_t instance);
    partial void Deletediscounts_t(discounts_t instance);
    partial void Insertexpenses_t(expenses_t instance);
    partial void Updateexpenses_t(expenses_t instance);
    partial void Deleteexpenses_t(expenses_t instance);
    partial void Insertglobal_session_t(global_session_t instance);
    partial void Updateglobal_session_t(global_session_t instance);
    partial void Deleteglobal_session_t(global_session_t instance);
    partial void Insertpayments_t(payments_t instance);
    partial void Updatepayments_t(payments_t instance);
    partial void Deletepayments_t(payments_t instance);
    partial void Insertpersonal_info_t(personal_info_t instance);
    partial void Updatepersonal_info_t(personal_info_t instance);
    partial void Deletepersonal_info_t(personal_info_t instance);
    partial void Insertplaystation_timezone(playstation_timezone instance);
    partial void Updateplaystation_timezone(playstation_timezone instance);
    partial void Deleteplaystation_timezone(playstation_timezone instance);
    partial void Insertsteps_of_discount_upgrading(steps_of_discount_upgrading instance);
    partial void Updatesteps_of_discount_upgrading(steps_of_discount_upgrading instance);
    partial void Deletesteps_of_discount_upgrading(steps_of_discount_upgrading instance);
    partial void Inserttables_t(tables_t instance);
    partial void Updatetables_t(tables_t instance);
    partial void Deletetables_t(tables_t instance);
    partial void Inserttimezones_t(timezones_t instance);
    partial void Updatetimezones_t(timezones_t instance);
    partial void Deletetimezones_t(timezones_t instance);
    partial void Insertitems_table(items_table instance);
    partial void Updateitems_table(items_table instance);
    partial void Deleteitems_table(items_table instance);
    partial void Insertsold_bar_history_table(sold_bar_history_table instance);
    partial void Updatesold_bar_history_table(sold_bar_history_table instance);
    partial void Deletesold_bar_history_table(sold_bar_history_table instance);
    partial void Insertbar_revision_t(bar_revision_t instance);
    partial void Updatebar_revision_t(bar_revision_t instance);
    partial void Deletebar_revision_t(bar_revision_t instance);
    #endregion
		
		public dbDataContext() : 
				base(global::Boom_Manager_Project.Properties.Settings.Default.BoomDB2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account_savings_t> account_savings_ts
		{
			get
			{
				return this.GetTable<account_savings_t>();
			}
		}
		
		public System.Data.Linq.Table<withdrow_money_t> withdrow_money_ts
		{
			get
			{
				return this.GetTable<withdrow_money_t>();
			}
		}
		
		public System.Data.Linq.Table<cash_t> cash_ts
		{
			get
			{
				return this.GetTable<cash_t>();
			}
		}
		
		public System.Data.Linq.Table<client_info_t> client_info_ts
		{
			get
			{
				return this.GetTable<client_info_t>();
			}
		}
		
		public System.Data.Linq.Table<clients_per_session_t> clients_per_session_ts
		{
			get
			{
				return this.GetTable<clients_per_session_t>();
			}
		}
		
		public System.Data.Linq.Table<days_sessions_t> days_sessions_ts
		{
			get
			{
				return this.GetTable<days_sessions_t>();
			}
		}
		
		public System.Data.Linq.Table<device_endpoints_t> device_endpoints_ts
		{
			get
			{
				return this.GetTable<device_endpoints_t>();
			}
		}
		
		public System.Data.Linq.Table<devices_t> devices_ts
		{
			get
			{
				return this.GetTable<devices_t>();
			}
		}
		
		public System.Data.Linq.Table<discounts_t> discounts_ts
		{
			get
			{
				return this.GetTable<discounts_t>();
			}
		}
		
		public System.Data.Linq.Table<expenses_t> expenses_ts
		{
			get
			{
				return this.GetTable<expenses_t>();
			}
		}
		
		public System.Data.Linq.Table<global_session_t> global_session_ts
		{
			get
			{
				return this.GetTable<global_session_t>();
			}
		}
		
		public System.Data.Linq.Table<payments_t> payments_ts
		{
			get
			{
				return this.GetTable<payments_t>();
			}
		}
		
		public System.Data.Linq.Table<personal_info_t> personal_info_ts
		{
			get
			{
				return this.GetTable<personal_info_t>();
			}
		}
		
		public System.Data.Linq.Table<playstation_timezone> playstation_timezones
		{
			get
			{
				return this.GetTable<playstation_timezone>();
			}
		}
		
		public System.Data.Linq.Table<steps_of_discount_upgrading> steps_of_discount_upgradings
		{
			get
			{
				return this.GetTable<steps_of_discount_upgrading>();
			}
		}
		
		public System.Data.Linq.Table<tables_t> tables_ts
		{
			get
			{
				return this.GetTable<tables_t>();
			}
		}
		
		public System.Data.Linq.Table<timezones_t> timezones_ts
		{
			get
			{
				return this.GetTable<timezones_t>();
			}
		}
		
		public System.Data.Linq.Table<items_table> items_tables
		{
			get
			{
				return this.GetTable<items_table>();
			}
		}
		
		public System.Data.Linq.Table<sold_bar_history_table> sold_bar_history_tables
		{
			get
			{
				return this.GetTable<sold_bar_history_table>();
			}
		}
		
		public System.Data.Linq.Table<bar_revision_t> bar_revision_ts
		{
			get
			{
				return this.GetTable<bar_revision_t>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account_savings_t")]
	public partial class account_savings_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _savings_id;
		
		private string _client_id;
		
		private double _savings;
		
		private EntityRef<client_info_t> _client_info_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsavings_idChanging(int value);
    partial void Onsavings_idChanged();
    partial void Onclient_idChanging(string value);
    partial void Onclient_idChanged();
    partial void OnsavingsChanging(double value);
    partial void OnsavingsChanged();
    #endregion
		
		public account_savings_t()
		{
			this._client_info_t = default(EntityRef<client_info_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savings_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int savings_id
		{
			get
			{
				return this._savings_id;
			}
			set
			{
				if ((this._savings_id != value))
				{
					this.Onsavings_idChanging(value);
					this.SendPropertyChanging();
					this._savings_id = value;
					this.SendPropertyChanged("savings_id");
					this.Onsavings_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client_info_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_savings", DbType="Float NOT NULL")]
		public double savings
		{
			get
			{
				return this._savings;
			}
			set
			{
				if ((this._savings != value))
				{
					this.OnsavingsChanging(value);
					this.SendPropertyChanging();
					this._savings = value;
					this.SendPropertyChanged("savings");
					this.OnsavingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_account_savings_t", Storage="_client_info_t", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public client_info_t client_info_t
		{
			get
			{
				return this._client_info_t.Entity;
			}
			set
			{
				client_info_t previousValue = this._client_info_t.Entity;
				if (((previousValue != value) 
							|| (this._client_info_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client_info_t.Entity = null;
						previousValue.account_savings_ts.Remove(this);
					}
					this._client_info_t.Entity = value;
					if ((value != null))
					{
						value.account_savings_ts.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(string);
					}
					this.SendPropertyChanged("client_info_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.withdrow_money_t")]
	public partial class withdrow_money_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _withdraw_money_id;
		
		private System.Nullable<int> _daily_id;
		
		private System.DateTime _transaction_time;
		
		private System.Nullable<double> _cash_amount;
		
		private string _manager;
		
		private EntityRef<global_session_t> _global_session_t;
		
		private EntityRef<personal_info_t> _personal_info_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwithdraw_money_idChanging(int value);
    partial void Onwithdraw_money_idChanged();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Ontransaction_timeChanging(System.DateTime value);
    partial void Ontransaction_timeChanged();
    partial void Oncash_amountChanging(System.Nullable<double> value);
    partial void Oncash_amountChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    #endregion
		
		public withdrow_money_t()
		{
			this._global_session_t = default(EntityRef<global_session_t>);
			this._personal_info_t = default(EntityRef<personal_info_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdraw_money_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int withdraw_money_id
		{
			get
			{
				return this._withdraw_money_id;
			}
			set
			{
				if ((this._withdraw_money_id != value))
				{
					this.Onwithdraw_money_idChanging(value);
					this.SendPropertyChanging();
					this._withdraw_money_id = value;
					this.SendPropertyChanged("withdraw_money_id");
					this.Onwithdraw_money_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_time", DbType="DateTime NOT NULL")]
		public System.DateTime transaction_time
		{
			get
			{
				return this._transaction_time;
			}
			set
			{
				if ((this._transaction_time != value))
				{
					this.Ontransaction_timeChanging(value);
					this.SendPropertyChanging();
					this._transaction_time = value;
					this.SendPropertyChanged("transaction_time");
					this.Ontransaction_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash_amount", DbType="Float")]
		public System.Nullable<double> cash_amount
		{
			get
			{
				return this._cash_amount;
			}
			set
			{
				if ((this._cash_amount != value))
				{
					this.Oncash_amountChanging(value);
					this.SendPropertyChanging();
					this._cash_amount = value;
					this.SendPropertyChanged("cash_amount");
					this.Oncash_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="VarChar(10)")]
		public string manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					if (this._personal_info_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_withdrow_money_t", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.withdrow_money_ts.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.withdrow_money_ts.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_withdrow_money_t", Storage="_personal_info_t", ThisKey="manager", OtherKey="person_id", IsForeignKey=true)]
		public personal_info_t personal_info_t
		{
			get
			{
				return this._personal_info_t.Entity;
			}
			set
			{
				personal_info_t previousValue = this._personal_info_t.Entity;
				if (((previousValue != value) 
							|| (this._personal_info_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personal_info_t.Entity = null;
						previousValue.withdrow_money_ts.Remove(this);
					}
					this._personal_info_t.Entity = value;
					if ((value != null))
					{
						value.withdrow_money_ts.Add(this);
						this._manager = value.person_id;
					}
					else
					{
						this._manager = default(string);
					}
					this.SendPropertyChanged("personal_info_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cash_t")]
	public partial class cash_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cash_id;
		
		private System.Nullable<int> _daily_id;
		
		private System.Nullable<double> _cash_amount;
		
		private EntityRef<global_session_t> _global_session_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncash_idChanging(int value);
    partial void Oncash_idChanged();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Oncash_amountChanging(System.Nullable<double> value);
    partial void Oncash_amountChanged();
    #endregion
		
		public cash_t()
		{
			this._global_session_t = default(EntityRef<global_session_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cash_id
		{
			get
			{
				return this._cash_id;
			}
			set
			{
				if ((this._cash_id != value))
				{
					this.Oncash_idChanging(value);
					this.SendPropertyChanging();
					this._cash_id = value;
					this.SendPropertyChanged("cash_id");
					this.Oncash_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash_amount", DbType="Float")]
		public System.Nullable<double> cash_amount
		{
			get
			{
				return this._cash_amount;
			}
			set
			{
				if ((this._cash_amount != value))
				{
					this.Oncash_amountChanging(value);
					this.SendPropertyChanging();
					this._cash_amount = value;
					this.SendPropertyChanged("cash_amount");
					this.Oncash_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_cash_t", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.cash_ts.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.cash_ts.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client_info_t")]
	public partial class client_info_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _client_id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _email;
		
		private string _phone;
		
		private System.DateTime _activation_date;
		
		private System.Nullable<double> _pers_discount;
		
		private double _played_sum;
		
		private EntitySet<account_savings_t> _account_savings_ts;
		
		private EntitySet<clients_per_session_t> _clients_per_session_ts;
		
		private EntitySet<payments_t> _payments_ts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(string value);
    partial void Onclient_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onactivation_dateChanging(System.DateTime value);
    partial void Onactivation_dateChanged();
    partial void Onpers_discountChanging(System.Nullable<double> value);
    partial void Onpers_discountChanged();
    partial void Onplayed_sumChanging(double value);
    partial void Onplayed_sumChanged();
    #endregion
		
		public client_info_t()
		{
			this._account_savings_ts = new EntitySet<account_savings_t>(new Action<account_savings_t>(this.attach_account_savings_ts), new Action<account_savings_t>(this.detach_account_savings_ts));
			this._clients_per_session_ts = new EntitySet<clients_per_session_t>(new Action<clients_per_session_t>(this.attach_clients_per_session_ts), new Action<clients_per_session_t>(this.detach_clients_per_session_ts));
			this._payments_ts = new EntitySet<payments_t>(new Action<payments_t>(this.attach_payments_ts), new Action<payments_t>(this.detach_payments_ts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activation_date", DbType="Date NOT NULL")]
		public System.DateTime activation_date
		{
			get
			{
				return this._activation_date;
			}
			set
			{
				if ((this._activation_date != value))
				{
					this.Onactivation_dateChanging(value);
					this.SendPropertyChanging();
					this._activation_date = value;
					this.SendPropertyChanged("activation_date");
					this.Onactivation_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pers_discount", DbType="Float")]
		public System.Nullable<double> pers_discount
		{
			get
			{
				return this._pers_discount;
			}
			set
			{
				if ((this._pers_discount != value))
				{
					this.Onpers_discountChanging(value);
					this.SendPropertyChanging();
					this._pers_discount = value;
					this.SendPropertyChanged("pers_discount");
					this.Onpers_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_played_sum", DbType="Float NOT NULL")]
		public double played_sum
		{
			get
			{
				return this._played_sum;
			}
			set
			{
				if ((this._played_sum != value))
				{
					this.Onplayed_sumChanging(value);
					this.SendPropertyChanging();
					this._played_sum = value;
					this.SendPropertyChanged("played_sum");
					this.Onplayed_sumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_account_savings_t", Storage="_account_savings_ts", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<account_savings_t> account_savings_ts
		{
			get
			{
				return this._account_savings_ts;
			}
			set
			{
				this._account_savings_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_clients_per_session_t", Storage="_clients_per_session_ts", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<clients_per_session_t> clients_per_session_ts
		{
			get
			{
				return this._clients_per_session_ts;
			}
			set
			{
				this._clients_per_session_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_payments_t", Storage="_payments_ts", ThisKey="client_id", OtherKey="client_id")]
		public EntitySet<payments_t> payments_ts
		{
			get
			{
				return this._payments_ts;
			}
			set
			{
				this._payments_ts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_account_savings_ts(account_savings_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = this;
		}
		
		private void detach_account_savings_ts(account_savings_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = null;
		}
		
		private void attach_clients_per_session_ts(clients_per_session_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = this;
		}
		
		private void detach_clients_per_session_ts(clients_per_session_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = null;
		}
		
		private void attach_payments_ts(payments_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = this;
		}
		
		private void detach_payments_ts(payments_t entity)
		{
			this.SendPropertyChanging();
			entity.client_info_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clients_per_session_t")]
	public partial class clients_per_session_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _clents_per_session_id;
		
		private System.Nullable<int> _session_id;
		
		private string _client_id;
		
		private System.Nullable<double> _payed_sum;
		
		private EntityRef<client_info_t> _client_info_t;
		
		private EntityRef<days_sessions_t> _days_sessions_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclents_per_session_idChanging(int value);
    partial void Onclents_per_session_idChanged();
    partial void Onsession_idChanging(System.Nullable<int> value);
    partial void Onsession_idChanged();
    partial void Onclient_idChanging(string value);
    partial void Onclient_idChanged();
    partial void Onpayed_sumChanging(System.Nullable<double> value);
    partial void Onpayed_sumChanged();
    #endregion
		
		public clients_per_session_t()
		{
			this._client_info_t = default(EntityRef<client_info_t>);
			this._days_sessions_t = default(EntityRef<days_sessions_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clents_per_session_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int clents_per_session_id
		{
			get
			{
				return this._clents_per_session_id;
			}
			set
			{
				if ((this._clents_per_session_id != value))
				{
					this.Onclents_per_session_idChanging(value);
					this.SendPropertyChanging();
					this._clents_per_session_id = value;
					this.SendPropertyChanged("clents_per_session_id");
					this.Onclents_per_session_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", DbType="Int")]
		public System.Nullable<int> session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					if (this._days_sessions_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="VarChar(15)")]
		public string client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client_info_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payed_sum", DbType="Float")]
		public System.Nullable<double> payed_sum
		{
			get
			{
				return this._payed_sum;
			}
			set
			{
				if ((this._payed_sum != value))
				{
					this.Onpayed_sumChanging(value);
					this.SendPropertyChanging();
					this._payed_sum = value;
					this.SendPropertyChanged("payed_sum");
					this.Onpayed_sumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_clients_per_session_t", Storage="_client_info_t", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public client_info_t client_info_t
		{
			get
			{
				return this._client_info_t.Entity;
			}
			set
			{
				client_info_t previousValue = this._client_info_t.Entity;
				if (((previousValue != value) 
							|| (this._client_info_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client_info_t.Entity = null;
						previousValue.clients_per_session_ts.Remove(this);
					}
					this._client_info_t.Entity = value;
					if ((value != null))
					{
						value.clients_per_session_ts.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(string);
					}
					this.SendPropertyChanged("client_info_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="days_sessions_t_clients_per_session_t", Storage="_days_sessions_t", ThisKey="session_id", OtherKey="session_id", IsForeignKey=true)]
		public days_sessions_t days_sessions_t
		{
			get
			{
				return this._days_sessions_t.Entity;
			}
			set
			{
				days_sessions_t previousValue = this._days_sessions_t.Entity;
				if (((previousValue != value) 
							|| (this._days_sessions_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._days_sessions_t.Entity = null;
						previousValue.clients_per_session_ts.Remove(this);
					}
					this._days_sessions_t.Entity = value;
					if ((value != null))
					{
						value.clients_per_session_ts.Add(this);
						this._session_id = value.session_id;
					}
					else
					{
						this._session_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("days_sessions_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.days_sessions_t")]
	public partial class days_sessions_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _daily_id;
		
		private int _session_id;
		
		private int _client_num;
		
		private System.Nullable<System.DateTime> _start_game;
		
		private System.Nullable<System.DateTime> _end_game;
		
		private string _playstation_id;
		
		private double _payed_sum;
		
		private double _played_money;
		
		private string _comments;
		
		private System.Nullable<double> _session_discount;
		
		private string _session_state;
		
		private EntitySet<clients_per_session_t> _clients_per_session_ts;
		
		private EntityRef<global_session_t> _global_session_t;
		
		private EntityRef<tables_t> _tables_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Onsession_idChanging(int value);
    partial void Onsession_idChanged();
    partial void Onclient_numChanging(int value);
    partial void Onclient_numChanged();
    partial void Onstart_gameChanging(System.Nullable<System.DateTime> value);
    partial void Onstart_gameChanged();
    partial void Onend_gameChanging(System.Nullable<System.DateTime> value);
    partial void Onend_gameChanged();
    partial void Onplaystation_idChanging(string value);
    partial void Onplaystation_idChanged();
    partial void Onpayed_sumChanging(double value);
    partial void Onpayed_sumChanged();
    partial void Onplayed_moneyChanging(double value);
    partial void Onplayed_moneyChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void Onsession_discountChanging(System.Nullable<double> value);
    partial void Onsession_discountChanged();
    partial void Onsession_stateChanging(string value);
    partial void Onsession_stateChanged();
    #endregion
		
		public days_sessions_t()
		{
			this._clients_per_session_ts = new EntitySet<clients_per_session_t>(new Action<clients_per_session_t>(this.attach_clients_per_session_ts), new Action<clients_per_session_t>(this.detach_clients_per_session_ts));
			this._global_session_t = default(EntityRef<global_session_t>);
			this._tables_t = default(EntityRef<tables_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int session_id
		{
			get
			{
				return this._session_id;
			}
			set
			{
				if ((this._session_id != value))
				{
					this.Onsession_idChanging(value);
					this.SendPropertyChanging();
					this._session_id = value;
					this.SendPropertyChanged("session_id");
					this.Onsession_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_num", DbType="Int NOT NULL")]
		public int client_num
		{
			get
			{
				return this._client_num;
			}
			set
			{
				if ((this._client_num != value))
				{
					this.Onclient_numChanging(value);
					this.SendPropertyChanging();
					this._client_num = value;
					this.SendPropertyChanged("client_num");
					this.Onclient_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_game", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_game
		{
			get
			{
				return this._start_game;
			}
			set
			{
				if ((this._start_game != value))
				{
					this.Onstart_gameChanging(value);
					this.SendPropertyChanging();
					this._start_game = value;
					this.SendPropertyChanged("start_game");
					this.Onstart_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_game", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_game
		{
			get
			{
				return this._end_game;
			}
			set
			{
				if ((this._end_game != value))
				{
					this.Onend_gameChanging(value);
					this.SendPropertyChanging();
					this._end_game = value;
					this.SendPropertyChanged("end_game");
					this.Onend_gameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_id", DbType="VarChar(10)")]
		public string playstation_id
		{
			get
			{
				return this._playstation_id;
			}
			set
			{
				if ((this._playstation_id != value))
				{
					if (this._tables_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplaystation_idChanging(value);
					this.SendPropertyChanging();
					this._playstation_id = value;
					this.SendPropertyChanged("playstation_id");
					this.Onplaystation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payed_sum", DbType="Float NOT NULL")]
		public double payed_sum
		{
			get
			{
				return this._payed_sum;
			}
			set
			{
				if ((this._payed_sum != value))
				{
					this.Onpayed_sumChanging(value);
					this.SendPropertyChanging();
					this._payed_sum = value;
					this.SendPropertyChanged("payed_sum");
					this.Onpayed_sumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_played_money", DbType="Float NOT NULL")]
		public double played_money
		{
			get
			{
				return this._played_money;
			}
			set
			{
				if ((this._played_money != value))
				{
					this.Onplayed_moneyChanging(value);
					this.SendPropertyChanging();
					this._played_money = value;
					this.SendPropertyChanged("played_money");
					this.Onplayed_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(1000)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_discount", DbType="Float")]
		public System.Nullable<double> session_discount
		{
			get
			{
				return this._session_discount;
			}
			set
			{
				if ((this._session_discount != value))
				{
					this.Onsession_discountChanging(value);
					this.SendPropertyChanging();
					this._session_discount = value;
					this.SendPropertyChanged("session_discount");
					this.Onsession_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session_state", DbType="VarChar(10)")]
		public string session_state
		{
			get
			{
				return this._session_state;
			}
			set
			{
				if ((this._session_state != value))
				{
					this.Onsession_stateChanging(value);
					this.SendPropertyChanging();
					this._session_state = value;
					this.SendPropertyChanged("session_state");
					this.Onsession_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="days_sessions_t_clients_per_session_t", Storage="_clients_per_session_ts", ThisKey="session_id", OtherKey="session_id")]
		public EntitySet<clients_per_session_t> clients_per_session_ts
		{
			get
			{
				return this._clients_per_session_ts;
			}
			set
			{
				this._clients_per_session_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_days_sessions_t", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.days_sessions_ts.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.days_sessions_ts.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_days_sessions_t", Storage="_tables_t", ThisKey="playstation_id", OtherKey="playstation_id", IsForeignKey=true)]
		public tables_t tables_t
		{
			get
			{
				return this._tables_t.Entity;
			}
			set
			{
				tables_t previousValue = this._tables_t.Entity;
				if (((previousValue != value) 
							|| (this._tables_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tables_t.Entity = null;
						previousValue.days_sessions_ts.Remove(this);
					}
					this._tables_t.Entity = value;
					if ((value != null))
					{
						value.days_sessions_ts.Add(this);
						this._playstation_id = value.playstation_id;
					}
					else
					{
						this._playstation_id = default(string);
					}
					this.SendPropertyChanged("tables_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clients_per_session_ts(clients_per_session_t entity)
		{
			this.SendPropertyChanging();
			entity.days_sessions_t = this;
		}
		
		private void detach_clients_per_session_ts(clients_per_session_t entity)
		{
			this.SendPropertyChanging();
			entity.days_sessions_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.device_endpoints_t")]
	public partial class device_endpoints_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _endpoint_id;
		
		private int _endpoint_index;
		
		private System.Nullable<int> _device_id;
		
		private string _playstation_id;
		
		private EntityRef<devices_t> _devices_t;
		
		private EntityRef<tables_t> _tables_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onendpoint_idChanging(int value);
    partial void Onendpoint_idChanged();
    partial void Onendpoint_indexChanging(int value);
    partial void Onendpoint_indexChanged();
    partial void Ondevice_idChanging(System.Nullable<int> value);
    partial void Ondevice_idChanged();
    partial void Onplaystation_idChanging(string value);
    partial void Onplaystation_idChanged();
    #endregion
		
		public device_endpoints_t()
		{
			this._devices_t = default(EntityRef<devices_t>);
			this._tables_t = default(EntityRef<tables_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endpoint_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int endpoint_id
		{
			get
			{
				return this._endpoint_id;
			}
			set
			{
				if ((this._endpoint_id != value))
				{
					this.Onendpoint_idChanging(value);
					this.SendPropertyChanging();
					this._endpoint_id = value;
					this.SendPropertyChanged("endpoint_id");
					this.Onendpoint_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endpoint_index", DbType="Int NOT NULL")]
		public int endpoint_index
		{
			get
			{
				return this._endpoint_index;
			}
			set
			{
				if ((this._endpoint_index != value))
				{
					this.Onendpoint_indexChanging(value);
					this.SendPropertyChanging();
					this._endpoint_index = value;
					this.SendPropertyChanged("endpoint_index");
					this.Onendpoint_indexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_device_id", DbType="Int")]
		public System.Nullable<int> device_id
		{
			get
			{
				return this._device_id;
			}
			set
			{
				if ((this._device_id != value))
				{
					if (this._devices_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondevice_idChanging(value);
					this.SendPropertyChanging();
					this._device_id = value;
					this.SendPropertyChanged("device_id");
					this.Ondevice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_id", DbType="VarChar(10)")]
		public string playstation_id
		{
			get
			{
				return this._playstation_id;
			}
			set
			{
				if ((this._playstation_id != value))
				{
					if (this._tables_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplaystation_idChanging(value);
					this.SendPropertyChanging();
					this._playstation_id = value;
					this.SendPropertyChanged("playstation_id");
					this.Onplaystation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="devices_t_device_endpoints_t", Storage="_devices_t", ThisKey="device_id", OtherKey="device_id", IsForeignKey=true)]
		public devices_t devices_t
		{
			get
			{
				return this._devices_t.Entity;
			}
			set
			{
				devices_t previousValue = this._devices_t.Entity;
				if (((previousValue != value) 
							|| (this._devices_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._devices_t.Entity = null;
						previousValue.device_endpoints_ts.Remove(this);
					}
					this._devices_t.Entity = value;
					if ((value != null))
					{
						value.device_endpoints_ts.Add(this);
						this._device_id = value.device_id;
					}
					else
					{
						this._device_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("devices_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_device_endpoints_t", Storage="_tables_t", ThisKey="playstation_id", OtherKey="playstation_id", IsForeignKey=true)]
		public tables_t tables_t
		{
			get
			{
				return this._tables_t.Entity;
			}
			set
			{
				tables_t previousValue = this._tables_t.Entity;
				if (((previousValue != value) 
							|| (this._tables_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tables_t.Entity = null;
						previousValue.device_endpoints_ts.Remove(this);
					}
					this._tables_t.Entity = value;
					if ((value != null))
					{
						value.device_endpoints_ts.Add(this);
						this._playstation_id = value.playstation_id;
					}
					else
					{
						this._playstation_id = default(string);
					}
					this.SendPropertyChanged("tables_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.devices_t")]
	public partial class devices_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _device_id;
		
		private string _ip_address;
		
		private EntitySet<device_endpoints_t> _device_endpoints_ts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondevice_idChanging(int value);
    partial void Ondevice_idChanged();
    partial void Onip_addressChanging(string value);
    partial void Onip_addressChanged();
    #endregion
		
		public devices_t()
		{
			this._device_endpoints_ts = new EntitySet<device_endpoints_t>(new Action<device_endpoints_t>(this.attach_device_endpoints_ts), new Action<device_endpoints_t>(this.detach_device_endpoints_ts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_device_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int device_id
		{
			get
			{
				return this._device_id;
			}
			set
			{
				if ((this._device_id != value))
				{
					this.Ondevice_idChanging(value);
					this.SendPropertyChanging();
					this._device_id = value;
					this.SendPropertyChanged("device_id");
					this.Ondevice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip_address", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ip_address
		{
			get
			{
				return this._ip_address;
			}
			set
			{
				if ((this._ip_address != value))
				{
					this.Onip_addressChanging(value);
					this.SendPropertyChanging();
					this._ip_address = value;
					this.SendPropertyChanged("ip_address");
					this.Onip_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="devices_t_device_endpoints_t", Storage="_device_endpoints_ts", ThisKey="device_id", OtherKey="device_id")]
		public EntitySet<device_endpoints_t> device_endpoints_ts
		{
			get
			{
				return this._device_endpoints_ts;
			}
			set
			{
				this._device_endpoints_ts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_device_endpoints_ts(device_endpoints_t entity)
		{
			this.SendPropertyChanging();
			entity.devices_t = this;
		}
		
		private void detach_device_endpoints_ts(device_endpoints_t entity)
		{
			this.SendPropertyChanging();
			entity.devices_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.discounts_t")]
	public partial class discounts_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _discount_id;
		
		private string _discount_reason;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
		private System.Nullable<double> _discountSize;
		
		private string _discount_timezones;
		
		private string _discount_playstation_ids;
		
		private System.Nullable<System.TimeSpan> _required_hours_for_bonus;
		
		private System.Nullable<System.TimeSpan> _bonus_hours;
		
		private string _required_item_to_buy;
		
		private System.Nullable<int> _number_of_required_items;
		
		private string _bonus_item;
		
		private System.Nullable<int> _number_of_bonus_item;
		
		private System.Nullable<double> _price_discount;
		
		private string _discount_auditory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondiscount_idChanging(int value);
    partial void Ondiscount_idChanged();
    partial void Ondiscount_reasonChanging(string value);
    partial void Ondiscount_reasonChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.DateTime value);
    partial void OnendDateChanged();
    partial void OndiscountSizeChanging(System.Nullable<double> value);
    partial void OndiscountSizeChanged();
    partial void Ondiscount_timezonesChanging(string value);
    partial void Ondiscount_timezonesChanged();
    partial void Ondiscount_playstation_idsChanging(string value);
    partial void Ondiscount_playstation_idsChanged();
    partial void Onrequired_hours_for_bonusChanging(System.Nullable<System.TimeSpan> value);
    partial void Onrequired_hours_for_bonusChanged();
    partial void Onbonus_hoursChanging(System.Nullable<System.TimeSpan> value);
    partial void Onbonus_hoursChanged();
    partial void Onrequired_item_to_buyChanging(string value);
    partial void Onrequired_item_to_buyChanged();
    partial void Onnumber_of_required_itemsChanging(System.Nullable<int> value);
    partial void Onnumber_of_required_itemsChanged();
    partial void Onbonus_itemChanging(string value);
    partial void Onbonus_itemChanged();
    partial void Onnumber_of_bonus_itemChanging(System.Nullable<int> value);
    partial void Onnumber_of_bonus_itemChanged();
    partial void Onprice_discountChanging(System.Nullable<double> value);
    partial void Onprice_discountChanged();
    partial void Ondiscount_auditoryChanging(string value);
    partial void Ondiscount_auditoryChanged();
    #endregion
		
		public discounts_t()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int discount_id
		{
			get
			{
				return this._discount_id;
			}
			set
			{
				if ((this._discount_id != value))
				{
					this.Ondiscount_idChanging(value);
					this.SendPropertyChanging();
					this._discount_id = value;
					this.SendPropertyChanged("discount_id");
					this.Ondiscount_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_reason", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string discount_reason
		{
			get
			{
				return this._discount_reason;
			}
			set
			{
				if ((this._discount_reason != value))
				{
					this.Ondiscount_reasonChanging(value);
					this.SendPropertyChanging();
					this._discount_reason = value;
					this.SendPropertyChanged("discount_reason");
					this.Ondiscount_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountSize", DbType="Float")]
		public System.Nullable<double> discountSize
		{
			get
			{
				return this._discountSize;
			}
			set
			{
				if ((this._discountSize != value))
				{
					this.OndiscountSizeChanging(value);
					this.SendPropertyChanging();
					this._discountSize = value;
					this.SendPropertyChanged("discountSize");
					this.OndiscountSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_timezones", DbType="VarChar(200)")]
		public string discount_timezones
		{
			get
			{
				return this._discount_timezones;
			}
			set
			{
				if ((this._discount_timezones != value))
				{
					this.Ondiscount_timezonesChanging(value);
					this.SendPropertyChanging();
					this._discount_timezones = value;
					this.SendPropertyChanged("discount_timezones");
					this.Ondiscount_timezonesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_playstation_ids", DbType="VarChar(200)")]
		public string discount_playstation_ids
		{
			get
			{
				return this._discount_playstation_ids;
			}
			set
			{
				if ((this._discount_playstation_ids != value))
				{
					this.Ondiscount_playstation_idsChanging(value);
					this.SendPropertyChanging();
					this._discount_playstation_ids = value;
					this.SendPropertyChanged("discount_playstation_ids");
					this.Ondiscount_playstation_idsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_required_hours_for_bonus", DbType="Time")]
		public System.Nullable<System.TimeSpan> required_hours_for_bonus
		{
			get
			{
				return this._required_hours_for_bonus;
			}
			set
			{
				if ((this._required_hours_for_bonus != value))
				{
					this.Onrequired_hours_for_bonusChanging(value);
					this.SendPropertyChanging();
					this._required_hours_for_bonus = value;
					this.SendPropertyChanged("required_hours_for_bonus");
					this.Onrequired_hours_for_bonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus_hours", DbType="Time")]
		public System.Nullable<System.TimeSpan> bonus_hours
		{
			get
			{
				return this._bonus_hours;
			}
			set
			{
				if ((this._bonus_hours != value))
				{
					this.Onbonus_hoursChanging(value);
					this.SendPropertyChanging();
					this._bonus_hours = value;
					this.SendPropertyChanged("bonus_hours");
					this.Onbonus_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_required_item_to_buy", DbType="VarChar(50)")]
		public string required_item_to_buy
		{
			get
			{
				return this._required_item_to_buy;
			}
			set
			{
				if ((this._required_item_to_buy != value))
				{
					this.Onrequired_item_to_buyChanging(value);
					this.SendPropertyChanging();
					this._required_item_to_buy = value;
					this.SendPropertyChanged("required_item_to_buy");
					this.Onrequired_item_to_buyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_of_required_items", DbType="Int")]
		public System.Nullable<int> number_of_required_items
		{
			get
			{
				return this._number_of_required_items;
			}
			set
			{
				if ((this._number_of_required_items != value))
				{
					this.Onnumber_of_required_itemsChanging(value);
					this.SendPropertyChanging();
					this._number_of_required_items = value;
					this.SendPropertyChanged("number_of_required_items");
					this.Onnumber_of_required_itemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bonus_item", DbType="VarChar(50)")]
		public string bonus_item
		{
			get
			{
				return this._bonus_item;
			}
			set
			{
				if ((this._bonus_item != value))
				{
					this.Onbonus_itemChanging(value);
					this.SendPropertyChanging();
					this._bonus_item = value;
					this.SendPropertyChanged("bonus_item");
					this.Onbonus_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_of_bonus_item", DbType="Int")]
		public System.Nullable<int> number_of_bonus_item
		{
			get
			{
				return this._number_of_bonus_item;
			}
			set
			{
				if ((this._number_of_bonus_item != value))
				{
					this.Onnumber_of_bonus_itemChanging(value);
					this.SendPropertyChanging();
					this._number_of_bonus_item = value;
					this.SendPropertyChanged("number_of_bonus_item");
					this.Onnumber_of_bonus_itemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_discount", DbType="Float")]
		public System.Nullable<double> price_discount
		{
			get
			{
				return this._price_discount;
			}
			set
			{
				if ((this._price_discount != value))
				{
					this.Onprice_discountChanging(value);
					this.SendPropertyChanging();
					this._price_discount = value;
					this.SendPropertyChanged("price_discount");
					this.Onprice_discountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount_auditory", DbType="VarChar(50)")]
		public string discount_auditory
		{
			get
			{
				return this._discount_auditory;
			}
			set
			{
				if ((this._discount_auditory != value))
				{
					this.Ondiscount_auditoryChanging(value);
					this.SendPropertyChanging();
					this._discount_auditory = value;
					this.SendPropertyChanged("discount_auditory");
					this.Ondiscount_auditoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.expenses_t")]
	public partial class expenses_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _expense_id;
		
		private System.Nullable<int> _daily_id;
		
		private double _cash_amount;
		
		private System.DateTime _expenses_time;
		
		private string _comments;
		
		private EntityRef<global_session_t> _global_session_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onexpense_idChanging(int value);
    partial void Onexpense_idChanged();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Oncash_amountChanging(double value);
    partial void Oncash_amountChanged();
    partial void Onexpenses_timeChanging(System.DateTime value);
    partial void Onexpenses_timeChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public expenses_t()
		{
			this._global_session_t = default(EntityRef<global_session_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expense_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int expense_id
		{
			get
			{
				return this._expense_id;
			}
			set
			{
				if ((this._expense_id != value))
				{
					this.Onexpense_idChanging(value);
					this.SendPropertyChanging();
					this._expense_id = value;
					this.SendPropertyChanged("expense_id");
					this.Onexpense_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cash_amount", DbType="Float NOT NULL")]
		public double cash_amount
		{
			get
			{
				return this._cash_amount;
			}
			set
			{
				if ((this._cash_amount != value))
				{
					this.Oncash_amountChanging(value);
					this.SendPropertyChanging();
					this._cash_amount = value;
					this.SendPropertyChanged("cash_amount");
					this.Oncash_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expenses_time", DbType="DateTime NOT NULL")]
		public System.DateTime expenses_time
		{
			get
			{
				return this._expenses_time;
			}
			set
			{
				if ((this._expenses_time != value))
				{
					this.Onexpenses_timeChanging(value);
					this.SendPropertyChanging();
					this._expenses_time = value;
					this.SendPropertyChanged("expenses_time");
					this.Onexpenses_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(500)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_expenses_t", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.expenses_ts.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.expenses_ts.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.global_session_t")]
	public partial class global_session_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _daily_id;
		
		private System.DateTime _start_session;
		
		private System.DateTime _end_session;
		
		private string _operator_id;
		
		private string _administrator_id;
		
		private EntitySet<withdrow_money_t> _withdrow_money_ts;
		
		private EntitySet<cash_t> _cash_ts;
		
		private EntitySet<days_sessions_t> _days_sessions_ts;
		
		private EntitySet<expenses_t> _expenses_ts;
		
		private EntitySet<sold_bar_history_table> _sold_bar_history_tables;
		
		private EntitySet<bar_revision_t> _bar_revision_ts;
		
		private EntityRef<personal_info_t> _personal_info_t;
		
		private EntityRef<personal_info_t> _personal_info_t1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondaily_idChanging(int value);
    partial void Ondaily_idChanged();
    partial void Onstart_sessionChanging(System.DateTime value);
    partial void Onstart_sessionChanged();
    partial void Onend_sessionChanging(System.DateTime value);
    partial void Onend_sessionChanged();
    partial void Onoperator_idChanging(string value);
    partial void Onoperator_idChanged();
    partial void Onadministrator_idChanging(string value);
    partial void Onadministrator_idChanged();
    #endregion
		
		public global_session_t()
		{
			this._withdrow_money_ts = new EntitySet<withdrow_money_t>(new Action<withdrow_money_t>(this.attach_withdrow_money_ts), new Action<withdrow_money_t>(this.detach_withdrow_money_ts));
			this._cash_ts = new EntitySet<cash_t>(new Action<cash_t>(this.attach_cash_ts), new Action<cash_t>(this.detach_cash_ts));
			this._days_sessions_ts = new EntitySet<days_sessions_t>(new Action<days_sessions_t>(this.attach_days_sessions_ts), new Action<days_sessions_t>(this.detach_days_sessions_ts));
			this._expenses_ts = new EntitySet<expenses_t>(new Action<expenses_t>(this.attach_expenses_ts), new Action<expenses_t>(this.detach_expenses_ts));
			this._sold_bar_history_tables = new EntitySet<sold_bar_history_table>(new Action<sold_bar_history_table>(this.attach_sold_bar_history_tables), new Action<sold_bar_history_table>(this.detach_sold_bar_history_tables));
			this._bar_revision_ts = new EntitySet<bar_revision_t>(new Action<bar_revision_t>(this.attach_bar_revision_ts), new Action<bar_revision_t>(this.detach_bar_revision_ts));
			this._personal_info_t = default(EntityRef<personal_info_t>);
			this._personal_info_t1 = default(EntityRef<personal_info_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_session", DbType="DateTime NOT NULL")]
		public System.DateTime start_session
		{
			get
			{
				return this._start_session;
			}
			set
			{
				if ((this._start_session != value))
				{
					this.Onstart_sessionChanging(value);
					this.SendPropertyChanging();
					this._start_session = value;
					this.SendPropertyChanged("start_session");
					this.Onstart_sessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_session", DbType="DateTime NOT NULL")]
		public System.DateTime end_session
		{
			get
			{
				return this._end_session;
			}
			set
			{
				if ((this._end_session != value))
				{
					this.Onend_sessionChanging(value);
					this.SendPropertyChanging();
					this._end_session = value;
					this.SendPropertyChanged("end_session");
					this.Onend_sessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operator_id", DbType="VarChar(10)")]
		public string operator_id
		{
			get
			{
				return this._operator_id;
			}
			set
			{
				if ((this._operator_id != value))
				{
					if (this._personal_info_t1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onoperator_idChanging(value);
					this.SendPropertyChanging();
					this._operator_id = value;
					this.SendPropertyChanged("operator_id");
					this.Onoperator_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_administrator_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string administrator_id
		{
			get
			{
				return this._administrator_id;
			}
			set
			{
				if ((this._administrator_id != value))
				{
					if (this._personal_info_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadministrator_idChanging(value);
					this.SendPropertyChanging();
					this._administrator_id = value;
					this.SendPropertyChanged("administrator_id");
					this.Onadministrator_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_withdrow_money_t", Storage="_withdrow_money_ts", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<withdrow_money_t> withdrow_money_ts
		{
			get
			{
				return this._withdrow_money_ts;
			}
			set
			{
				this._withdrow_money_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_cash_t", Storage="_cash_ts", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<cash_t> cash_ts
		{
			get
			{
				return this._cash_ts;
			}
			set
			{
				this._cash_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_days_sessions_t", Storage="_days_sessions_ts", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<days_sessions_t> days_sessions_ts
		{
			get
			{
				return this._days_sessions_ts;
			}
			set
			{
				this._days_sessions_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_expenses_t", Storage="_expenses_ts", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<expenses_t> expenses_ts
		{
			get
			{
				return this._expenses_ts;
			}
			set
			{
				this._expenses_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_sold_bar_history_table", Storage="_sold_bar_history_tables", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<sold_bar_history_table> sold_bar_history_tables
		{
			get
			{
				return this._sold_bar_history_tables;
			}
			set
			{
				this._sold_bar_history_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_bar_revision_t", Storage="_bar_revision_ts", ThisKey="daily_id", OtherKey="daily_id")]
		public EntitySet<bar_revision_t> bar_revision_ts
		{
			get
			{
				return this._bar_revision_ts;
			}
			set
			{
				this._bar_revision_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_global_session_t", Storage="_personal_info_t", ThisKey="administrator_id", OtherKey="person_id", IsForeignKey=true)]
		public personal_info_t personal_info_t
		{
			get
			{
				return this._personal_info_t.Entity;
			}
			set
			{
				personal_info_t previousValue = this._personal_info_t.Entity;
				if (((previousValue != value) 
							|| (this._personal_info_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personal_info_t.Entity = null;
						previousValue.global_session_ts.Remove(this);
					}
					this._personal_info_t.Entity = value;
					if ((value != null))
					{
						value.global_session_ts.Add(this);
						this._administrator_id = value.person_id;
					}
					else
					{
						this._administrator_id = default(string);
					}
					this.SendPropertyChanged("personal_info_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_global_session_t1", Storage="_personal_info_t1", ThisKey="operator_id", OtherKey="person_id", IsForeignKey=true)]
		public personal_info_t personal_info_t1
		{
			get
			{
				return this._personal_info_t1.Entity;
			}
			set
			{
				personal_info_t previousValue = this._personal_info_t1.Entity;
				if (((previousValue != value) 
							|| (this._personal_info_t1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._personal_info_t1.Entity = null;
						previousValue.global_session_ts1.Remove(this);
					}
					this._personal_info_t1.Entity = value;
					if ((value != null))
					{
						value.global_session_ts1.Add(this);
						this._operator_id = value.person_id;
					}
					else
					{
						this._operator_id = default(string);
					}
					this.SendPropertyChanged("personal_info_t1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_withdrow_money_ts(withdrow_money_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_withdrow_money_ts(withdrow_money_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
		
		private void attach_cash_ts(cash_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_cash_ts(cash_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
		
		private void attach_days_sessions_ts(days_sessions_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_days_sessions_ts(days_sessions_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
		
		private void attach_expenses_ts(expenses_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_expenses_ts(expenses_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
		
		private void attach_sold_bar_history_tables(sold_bar_history_table entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_sold_bar_history_tables(sold_bar_history_table entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
		
		private void attach_bar_revision_ts(bar_revision_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = this;
		}
		
		private void detach_bar_revision_ts(bar_revision_t entity)
		{
			this.SendPropertyChanging();
			entity.global_session_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payments_t")]
	public partial class payments_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _payment_id;
		
		private string _client_id;
		
		private double _put_cash;
		
		private System.DateTime _date_of_transaction;
		
		private EntityRef<client_info_t> _client_info_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Onclient_idChanging(string value);
    partial void Onclient_idChanged();
    partial void Onput_cashChanging(double value);
    partial void Onput_cashChanged();
    partial void Ondate_of_transactionChanging(System.DateTime value);
    partial void Ondate_of_transactionChanged();
    #endregion
		
		public payments_t()
		{
			this._client_info_t = default(EntityRef<client_info_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client_info_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_put_cash", DbType="Float NOT NULL")]
		public double put_cash
		{
			get
			{
				return this._put_cash;
			}
			set
			{
				if ((this._put_cash != value))
				{
					this.Onput_cashChanging(value);
					this.SendPropertyChanging();
					this._put_cash = value;
					this.SendPropertyChanged("put_cash");
					this.Onput_cashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_transaction", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_transaction
		{
			get
			{
				return this._date_of_transaction;
			}
			set
			{
				if ((this._date_of_transaction != value))
				{
					this.Ondate_of_transactionChanging(value);
					this.SendPropertyChanging();
					this._date_of_transaction = value;
					this.SendPropertyChanged("date_of_transaction");
					this.Ondate_of_transactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_info_t_payments_t", Storage="_client_info_t", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
		public client_info_t client_info_t
		{
			get
			{
				return this._client_info_t.Entity;
			}
			set
			{
				client_info_t previousValue = this._client_info_t.Entity;
				if (((previousValue != value) 
							|| (this._client_info_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client_info_t.Entity = null;
						previousValue.payments_ts.Remove(this);
					}
					this._client_info_t.Entity = value;
					if ((value != null))
					{
						value.payments_ts.Add(this);
						this._client_id = value.client_id;
					}
					else
					{
						this._client_id = default(string);
					}
					this.SendPropertyChanged("client_info_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.personal_info_t")]
	public partial class personal_info_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _person_id;
		
		private string _name;
		
		private string _staff_login;
		
		private string _staff_password;
		
		private string _position;
		
		private string _phone;
		
		private string _additional_phone;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _home_address;
		
		private int _salary_per_day;
		
		private System.Nullable<System.DateTime> _registration_date;
		
		private EntitySet<withdrow_money_t> _withdrow_money_ts;
		
		private EntitySet<global_session_t> _global_session_ts;
		
		private EntitySet<global_session_t> _global_session_ts1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperson_idChanging(string value);
    partial void Onperson_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onstaff_loginChanging(string value);
    partial void Onstaff_loginChanged();
    partial void Onstaff_passwordChanging(string value);
    partial void Onstaff_passwordChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onadditional_phoneChanging(string value);
    partial void Onadditional_phoneChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void Onhome_addressChanging(string value);
    partial void Onhome_addressChanged();
    partial void Onsalary_per_dayChanging(int value);
    partial void Onsalary_per_dayChanged();
    partial void Onregistration_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onregistration_dateChanged();
    #endregion
		
		public personal_info_t()
		{
			this._withdrow_money_ts = new EntitySet<withdrow_money_t>(new Action<withdrow_money_t>(this.attach_withdrow_money_ts), new Action<withdrow_money_t>(this.detach_withdrow_money_ts));
			this._global_session_ts = new EntitySet<global_session_t>(new Action<global_session_t>(this.attach_global_session_ts), new Action<global_session_t>(this.detach_global_session_ts));
			this._global_session_ts1 = new EntitySet<global_session_t>(new Action<global_session_t>(this.attach_global_session_ts1), new Action<global_session_t>(this.detach_global_session_ts1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string person_id
		{
			get
			{
				return this._person_id;
			}
			set
			{
				if ((this._person_id != value))
				{
					this.Onperson_idChanging(value);
					this.SendPropertyChanging();
					this._person_id = value;
					this.SendPropertyChanged("person_id");
					this.Onperson_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_login", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string staff_login
		{
			get
			{
				return this._staff_login;
			}
			set
			{
				if ((this._staff_login != value))
				{
					this.Onstaff_loginChanging(value);
					this.SendPropertyChanging();
					this._staff_login = value;
					this.SendPropertyChanged("staff_login");
					this.Onstaff_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string staff_password
		{
			get
			{
				return this._staff_password;
			}
			set
			{
				if ((this._staff_password != value))
				{
					this.Onstaff_passwordChanging(value);
					this.SendPropertyChanging();
					this._staff_password = value;
					this.SendPropertyChanged("staff_password");
					this.Onstaff_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_additional_phone", DbType="VarChar(50)")]
		public string additional_phone
		{
			get
			{
				return this._additional_phone;
			}
			set
			{
				if ((this._additional_phone != value))
				{
					this.Onadditional_phoneChanging(value);
					this.SendPropertyChanging();
					this._additional_phone = value;
					this.SendPropertyChanged("additional_phone");
					this.Onadditional_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_home_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string home_address
		{
			get
			{
				return this._home_address;
			}
			set
			{
				if ((this._home_address != value))
				{
					this.Onhome_addressChanging(value);
					this.SendPropertyChanging();
					this._home_address = value;
					this.SendPropertyChanged("home_address");
					this.Onhome_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_per_day", DbType="Int NOT NULL")]
		public int salary_per_day
		{
			get
			{
				return this._salary_per_day;
			}
			set
			{
				if ((this._salary_per_day != value))
				{
					this.Onsalary_per_dayChanging(value);
					this.SendPropertyChanging();
					this._salary_per_day = value;
					this.SendPropertyChanged("salary_per_day");
					this.Onsalary_per_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_date", DbType="Date")]
		public System.Nullable<System.DateTime> registration_date
		{
			get
			{
				return this._registration_date;
			}
			set
			{
				if ((this._registration_date != value))
				{
					this.Onregistration_dateChanging(value);
					this.SendPropertyChanging();
					this._registration_date = value;
					this.SendPropertyChanged("registration_date");
					this.Onregistration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_withdrow_money_t", Storage="_withdrow_money_ts", ThisKey="person_id", OtherKey="manager")]
		public EntitySet<withdrow_money_t> withdrow_money_ts
		{
			get
			{
				return this._withdrow_money_ts;
			}
			set
			{
				this._withdrow_money_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_global_session_t", Storage="_global_session_ts", ThisKey="person_id", OtherKey="administrator_id")]
		public EntitySet<global_session_t> global_session_ts
		{
			get
			{
				return this._global_session_ts;
			}
			set
			{
				this._global_session_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="personal_info_t_global_session_t1", Storage="_global_session_ts1", ThisKey="person_id", OtherKey="operator_id")]
		public EntitySet<global_session_t> global_session_ts1
		{
			get
			{
				return this._global_session_ts1;
			}
			set
			{
				this._global_session_ts1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_withdrow_money_ts(withdrow_money_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t = this;
		}
		
		private void detach_withdrow_money_ts(withdrow_money_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t = null;
		}
		
		private void attach_global_session_ts(global_session_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t = this;
		}
		
		private void detach_global_session_ts(global_session_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t = null;
		}
		
		private void attach_global_session_ts1(global_session_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t1 = this;
		}
		
		private void detach_global_session_ts1(global_session_t entity)
		{
			this.SendPropertyChanging();
			entity.personal_info_t1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.playstation_timezone")]
	public partial class playstation_timezone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _playstation_timezone_id;
		
		private string _playstation_id;
		
		private string _timezone_name;
		
		private System.Nullable<double> _timezone_cost_per_hour;
		
		private EntityRef<tables_t> _tables_t;
		
		private EntityRef<timezones_t> _timezones_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplaystation_timezone_idChanging(int value);
    partial void Onplaystation_timezone_idChanged();
    partial void Onplaystation_idChanging(string value);
    partial void Onplaystation_idChanged();
    partial void Ontimezone_nameChanging(string value);
    partial void Ontimezone_nameChanged();
    partial void Ontimezone_cost_per_hourChanging(System.Nullable<double> value);
    partial void Ontimezone_cost_per_hourChanged();
    #endregion
		
		public playstation_timezone()
		{
			this._tables_t = default(EntityRef<tables_t>);
			this._timezones_t = default(EntityRef<timezones_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_timezone_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int playstation_timezone_id
		{
			get
			{
				return this._playstation_timezone_id;
			}
			set
			{
				if ((this._playstation_timezone_id != value))
				{
					this.Onplaystation_timezone_idChanging(value);
					this.SendPropertyChanging();
					this._playstation_timezone_id = value;
					this.SendPropertyChanged("playstation_timezone_id");
					this.Onplaystation_timezone_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string playstation_id
		{
			get
			{
				return this._playstation_id;
			}
			set
			{
				if ((this._playstation_id != value))
				{
					if (this._tables_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplaystation_idChanging(value);
					this.SendPropertyChanging();
					this._playstation_id = value;
					this.SendPropertyChanged("playstation_id");
					this.Onplaystation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string timezone_name
		{
			get
			{
				return this._timezone_name;
			}
			set
			{
				if ((this._timezone_name != value))
				{
					if (this._timezones_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontimezone_nameChanging(value);
					this.SendPropertyChanging();
					this._timezone_name = value;
					this.SendPropertyChanged("timezone_name");
					this.Ontimezone_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone_cost_per_hour", DbType="Float")]
		public System.Nullable<double> timezone_cost_per_hour
		{
			get
			{
				return this._timezone_cost_per_hour;
			}
			set
			{
				if ((this._timezone_cost_per_hour != value))
				{
					this.Ontimezone_cost_per_hourChanging(value);
					this.SendPropertyChanging();
					this._timezone_cost_per_hour = value;
					this.SendPropertyChanged("timezone_cost_per_hour");
					this.Ontimezone_cost_per_hourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_playstation_timezone", Storage="_tables_t", ThisKey="playstation_id", OtherKey="playstation_id", IsForeignKey=true)]
		public tables_t tables_t
		{
			get
			{
				return this._tables_t.Entity;
			}
			set
			{
				tables_t previousValue = this._tables_t.Entity;
				if (((previousValue != value) 
							|| (this._tables_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tables_t.Entity = null;
						previousValue.playstation_timezones.Remove(this);
					}
					this._tables_t.Entity = value;
					if ((value != null))
					{
						value.playstation_timezones.Add(this);
						this._playstation_id = value.playstation_id;
					}
					else
					{
						this._playstation_id = default(string);
					}
					this.SendPropertyChanged("tables_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="timezones_t_playstation_timezone", Storage="_timezones_t", ThisKey="timezone_name", OtherKey="timezone_name", IsForeignKey=true)]
		public timezones_t timezones_t
		{
			get
			{
				return this._timezones_t.Entity;
			}
			set
			{
				timezones_t previousValue = this._timezones_t.Entity;
				if (((previousValue != value) 
							|| (this._timezones_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._timezones_t.Entity = null;
						previousValue.playstation_timezones.Remove(this);
					}
					this._timezones_t.Entity = value;
					if ((value != null))
					{
						value.playstation_timezones.Add(this);
						this._timezone_name = value.timezone_name;
					}
					else
					{
						this._timezone_name = default(string);
					}
					this.SendPropertyChanged("timezones_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.steps_of_discount_upgrading")]
	public partial class steps_of_discount_upgrading : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private double _required_played_sum;
		
		private double _discount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onrequired_played_sumChanging(double value);
    partial void Onrequired_played_sumChanged();
    partial void OndiscountChanging(double value);
    partial void OndiscountChanged();
    #endregion
		
		public steps_of_discount_upgrading()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_required_played_sum", DbType="Float NOT NULL")]
		public double required_played_sum
		{
			get
			{
				return this._required_played_sum;
			}
			set
			{
				if ((this._required_played_sum != value))
				{
					this.Onrequired_played_sumChanging(value);
					this.SendPropertyChanging();
					this._required_played_sum = value;
					this.SendPropertyChanged("required_played_sum");
					this.Onrequired_played_sumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Float NOT NULL")]
		public double discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tables_t")]
	public partial class tables_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _playstation_id;
		
		private string _playstation_state;
		
		private System.Nullable<System.DateTime> _order_time;
		
		private EntitySet<days_sessions_t> _days_sessions_ts;
		
		private EntitySet<device_endpoints_t> _device_endpoints_ts;
		
		private EntitySet<playstation_timezone> _playstation_timezones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplaystation_idChanging(string value);
    partial void Onplaystation_idChanged();
    partial void Onplaystation_stateChanging(string value);
    partial void Onplaystation_stateChanged();
    partial void Onorder_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onorder_timeChanged();
    #endregion
		
		public tables_t()
		{
			this._days_sessions_ts = new EntitySet<days_sessions_t>(new Action<days_sessions_t>(this.attach_days_sessions_ts), new Action<days_sessions_t>(this.detach_days_sessions_ts));
			this._device_endpoints_ts = new EntitySet<device_endpoints_t>(new Action<device_endpoints_t>(this.attach_device_endpoints_ts), new Action<device_endpoints_t>(this.detach_device_endpoints_ts));
			this._playstation_timezones = new EntitySet<playstation_timezone>(new Action<playstation_timezone>(this.attach_playstation_timezones), new Action<playstation_timezone>(this.detach_playstation_timezones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string playstation_id
		{
			get
			{
				return this._playstation_id;
			}
			set
			{
				if ((this._playstation_id != value))
				{
					this.Onplaystation_idChanging(value);
					this.SendPropertyChanging();
					this._playstation_id = value;
					this.SendPropertyChanged("playstation_id");
					this.Onplaystation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_playstation_state", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string playstation_state
		{
			get
			{
				return this._playstation_state;
			}
			set
			{
				if ((this._playstation_state != value))
				{
					this.Onplaystation_stateChanging(value);
					this.SendPropertyChanging();
					this._playstation_state = value;
					this.SendPropertyChanged("playstation_state");
					this.Onplaystation_stateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> order_time
		{
			get
			{
				return this._order_time;
			}
			set
			{
				if ((this._order_time != value))
				{
					this.Onorder_timeChanging(value);
					this.SendPropertyChanging();
					this._order_time = value;
					this.SendPropertyChanged("order_time");
					this.Onorder_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_days_sessions_t", Storage="_days_sessions_ts", ThisKey="playstation_id", OtherKey="playstation_id")]
		public EntitySet<days_sessions_t> days_sessions_ts
		{
			get
			{
				return this._days_sessions_ts;
			}
			set
			{
				this._days_sessions_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_device_endpoints_t", Storage="_device_endpoints_ts", ThisKey="playstation_id", OtherKey="playstation_id")]
		public EntitySet<device_endpoints_t> device_endpoints_ts
		{
			get
			{
				return this._device_endpoints_ts;
			}
			set
			{
				this._device_endpoints_ts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tables_t_playstation_timezone", Storage="_playstation_timezones", ThisKey="playstation_id", OtherKey="playstation_id")]
		public EntitySet<playstation_timezone> playstation_timezones
		{
			get
			{
				return this._playstation_timezones;
			}
			set
			{
				this._playstation_timezones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_days_sessions_ts(days_sessions_t entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = this;
		}
		
		private void detach_days_sessions_ts(days_sessions_t entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = null;
		}
		
		private void attach_device_endpoints_ts(device_endpoints_t entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = this;
		}
		
		private void detach_device_endpoints_ts(device_endpoints_t entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = null;
		}
		
		private void attach_playstation_timezones(playstation_timezone entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = this;
		}
		
		private void detach_playstation_timezones(playstation_timezone entity)
		{
			this.SendPropertyChanging();
			entity.tables_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.timezones_t")]
	public partial class timezones_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _timezone_name;
		
		private System.TimeSpan _timezone_start;
		
		private System.TimeSpan _timezone_end;
		
		private EntitySet<playstation_timezone> _playstation_timezones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontimezone_nameChanging(string value);
    partial void Ontimezone_nameChanged();
    partial void Ontimezone_startChanging(System.TimeSpan value);
    partial void Ontimezone_startChanged();
    partial void Ontimezone_endChanging(System.TimeSpan value);
    partial void Ontimezone_endChanged();
    #endregion
		
		public timezones_t()
		{
			this._playstation_timezones = new EntitySet<playstation_timezone>(new Action<playstation_timezone>(this.attach_playstation_timezones), new Action<playstation_timezone>(this.detach_playstation_timezones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone_name", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string timezone_name
		{
			get
			{
				return this._timezone_name;
			}
			set
			{
				if ((this._timezone_name != value))
				{
					this.Ontimezone_nameChanging(value);
					this.SendPropertyChanging();
					this._timezone_name = value;
					this.SendPropertyChanged("timezone_name");
					this.Ontimezone_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone_start", DbType="Time NOT NULL")]
		public System.TimeSpan timezone_start
		{
			get
			{
				return this._timezone_start;
			}
			set
			{
				if ((this._timezone_start != value))
				{
					this.Ontimezone_startChanging(value);
					this.SendPropertyChanging();
					this._timezone_start = value;
					this.SendPropertyChanged("timezone_start");
					this.Ontimezone_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timezone_end", DbType="Time NOT NULL")]
		public System.TimeSpan timezone_end
		{
			get
			{
				return this._timezone_end;
			}
			set
			{
				if ((this._timezone_end != value))
				{
					this.Ontimezone_endChanging(value);
					this.SendPropertyChanging();
					this._timezone_end = value;
					this.SendPropertyChanged("timezone_end");
					this.Ontimezone_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="timezones_t_playstation_timezone", Storage="_playstation_timezones", ThisKey="timezone_name", OtherKey="timezone_name")]
		public EntitySet<playstation_timezone> playstation_timezones
		{
			get
			{
				return this._playstation_timezones;
			}
			set
			{
				this._playstation_timezones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_playstation_timezones(playstation_timezone entity)
		{
			this.SendPropertyChanging();
			entity.timezones_t = this;
		}
		
		private void detach_playstation_timezones(playstation_timezone entity)
		{
			this.SendPropertyChanging();
			entity.timezones_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.items_table")]
	public partial class items_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _item_id;
		
		private System.Nullable<double> _cost;
		
		private string _category_name;
		
		private string _item_description;
		
		private System.Nullable<int> _number_left;
		
		private EntitySet<sold_bar_history_table> _sold_bar_history_tables;
		
		private EntitySet<bar_revision_t> _bar_revision_ts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitem_idChanging(string value);
    partial void Onitem_idChanged();
    partial void OncostChanging(System.Nullable<double> value);
    partial void OncostChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void Onitem_descriptionChanging(string value);
    partial void Onitem_descriptionChanged();
    partial void Onnumber_leftChanging(System.Nullable<int> value);
    partial void Onnumber_leftChanged();
    #endregion
		
		public items_table()
		{
			this._sold_bar_history_tables = new EntitySet<sold_bar_history_table>(new Action<sold_bar_history_table>(this.attach_sold_bar_history_tables), new Action<sold_bar_history_table>(this.detach_sold_bar_history_tables));
			this._bar_revision_ts = new EntitySet<bar_revision_t>(new Action<bar_revision_t>(this.attach_bar_revision_ts), new Action<bar_revision_t>(this.detach_bar_revision_ts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Float")]
		public System.Nullable<double> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="VarChar(20)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_description", DbType="VarChar(50)")]
		public string item_description
		{
			get
			{
				return this._item_description;
			}
			set
			{
				if ((this._item_description != value))
				{
					this.Onitem_descriptionChanging(value);
					this.SendPropertyChanging();
					this._item_description = value;
					this.SendPropertyChanged("item_description");
					this.Onitem_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_left", DbType="Int")]
		public System.Nullable<int> number_left
		{
			get
			{
				return this._number_left;
			}
			set
			{
				if ((this._number_left != value))
				{
					this.Onnumber_leftChanging(value);
					this.SendPropertyChanging();
					this._number_left = value;
					this.SendPropertyChanged("number_left");
					this.Onnumber_leftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="items_table_sold_bar_history_table", Storage="_sold_bar_history_tables", ThisKey="item_id", OtherKey="item_id")]
		public EntitySet<sold_bar_history_table> sold_bar_history_tables
		{
			get
			{
				return this._sold_bar_history_tables;
			}
			set
			{
				this._sold_bar_history_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="items_table_bar_revision_t", Storage="_bar_revision_ts", ThisKey="item_id", OtherKey="item_id")]
		public EntitySet<bar_revision_t> bar_revision_ts
		{
			get
			{
				return this._bar_revision_ts;
			}
			set
			{
				this._bar_revision_ts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sold_bar_history_tables(sold_bar_history_table entity)
		{
			this.SendPropertyChanging();
			entity.items_table = this;
		}
		
		private void detach_sold_bar_history_tables(sold_bar_history_table entity)
		{
			this.SendPropertyChanging();
			entity.items_table = null;
		}
		
		private void attach_bar_revision_ts(bar_revision_t entity)
		{
			this.SendPropertyChanging();
			entity.items_table = this;
		}
		
		private void detach_bar_revision_ts(bar_revision_t entity)
		{
			this.SendPropertyChanging();
			entity.items_table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sold_bar_history_table")]
	public partial class sold_bar_history_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _daily_id;
		
		private int _sale_id;
		
		private System.Nullable<System.DateTime> _sale_time;
		
		private string _item_id;
		
		private System.Nullable<int> _amount_sold;
		
		private string _comments;
		
		private EntityRef<global_session_t> _global_session_t;
		
		private EntityRef<items_table> _items_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Onsale_idChanging(int value);
    partial void Onsale_idChanged();
    partial void Onsale_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onsale_timeChanged();
    partial void Onitem_idChanging(string value);
    partial void Onitem_idChanged();
    partial void Onamount_soldChanging(System.Nullable<int> value);
    partial void Onamount_soldChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public sold_bar_history_table()
		{
			this._global_session_t = default(EntityRef<global_session_t>);
			this._items_table = default(EntityRef<items_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sale_id
		{
			get
			{
				return this._sale_id;
			}
			set
			{
				if ((this._sale_id != value))
				{
					this.Onsale_idChanging(value);
					this.SendPropertyChanging();
					this._sale_id = value;
					this.SendPropertyChanged("sale_id");
					this.Onsale_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> sale_time
		{
			get
			{
				return this._sale_time;
			}
			set
			{
				if ((this._sale_time != value))
				{
					this.Onsale_timeChanging(value);
					this.SendPropertyChanging();
					this._sale_time = value;
					this.SendPropertyChanged("sale_time");
					this.Onsale_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="VarChar(20)")]
		public string item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._items_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_sold", DbType="Int")]
		public System.Nullable<int> amount_sold
		{
			get
			{
				return this._amount_sold;
			}
			set
			{
				if ((this._amount_sold != value))
				{
					this.Onamount_soldChanging(value);
					this.SendPropertyChanging();
					this._amount_sold = value;
					this.SendPropertyChanged("amount_sold");
					this.Onamount_soldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(50)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_sold_bar_history_table", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.sold_bar_history_tables.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.sold_bar_history_tables.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="items_table_sold_bar_history_table", Storage="_items_table", ThisKey="item_id", OtherKey="item_id", IsForeignKey=true)]
		public items_table items_table
		{
			get
			{
				return this._items_table.Entity;
			}
			set
			{
				items_table previousValue = this._items_table.Entity;
				if (((previousValue != value) 
							|| (this._items_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._items_table.Entity = null;
						previousValue.sold_bar_history_tables.Remove(this);
					}
					this._items_table.Entity = value;
					if ((value != null))
					{
						value.sold_bar_history_tables.Add(this);
						this._item_id = value.item_id;
					}
					else
					{
						this._item_id = default(string);
					}
					this.SendPropertyChanged("items_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bar_revision_t")]
	public partial class bar_revision_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _daily_id;
		
		private string _item_id;
		
		private System.Nullable<int> _amount_sold;
		
		private System.Nullable<int> _amount_bought;
		
		private System.Nullable<int> _left_num;
		
		private int _bar_revision_id;
		
		private EntityRef<global_session_t> _global_session_t;
		
		private EntityRef<items_table> _items_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondaily_idChanging(System.Nullable<int> value);
    partial void Ondaily_idChanged();
    partial void Onitem_idChanging(string value);
    partial void Onitem_idChanged();
    partial void Onamount_soldChanging(System.Nullable<int> value);
    partial void Onamount_soldChanged();
    partial void Onamount_boughtChanging(System.Nullable<int> value);
    partial void Onamount_boughtChanged();
    partial void Onleft_numChanging(System.Nullable<int> value);
    partial void Onleft_numChanged();
    partial void Onbar_revision_idChanging(int value);
    partial void Onbar_revision_idChanged();
    #endregion
		
		public bar_revision_t()
		{
			this._global_session_t = default(EntityRef<global_session_t>);
			this._items_table = default(EntityRef<items_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_daily_id", DbType="Int")]
		public System.Nullable<int> daily_id
		{
			get
			{
				return this._daily_id;
			}
			set
			{
				if ((this._daily_id != value))
				{
					if (this._global_session_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondaily_idChanging(value);
					this.SendPropertyChanging();
					this._daily_id = value;
					this.SendPropertyChanged("daily_id");
					this.Ondaily_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="VarChar(20)")]
		public string item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._items_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_sold", DbType="Int")]
		public System.Nullable<int> amount_sold
		{
			get
			{
				return this._amount_sold;
			}
			set
			{
				if ((this._amount_sold != value))
				{
					this.Onamount_soldChanging(value);
					this.SendPropertyChanging();
					this._amount_sold = value;
					this.SendPropertyChanged("amount_sold");
					this.Onamount_soldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_bought", DbType="Int")]
		public System.Nullable<int> amount_bought
		{
			get
			{
				return this._amount_bought;
			}
			set
			{
				if ((this._amount_bought != value))
				{
					this.Onamount_boughtChanging(value);
					this.SendPropertyChanging();
					this._amount_bought = value;
					this.SendPropertyChanged("amount_bought");
					this.Onamount_boughtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_left_num", DbType="Int")]
		public System.Nullable<int> left_num
		{
			get
			{
				return this._left_num;
			}
			set
			{
				if ((this._left_num != value))
				{
					this.Onleft_numChanging(value);
					this.SendPropertyChanging();
					this._left_num = value;
					this.SendPropertyChanged("left_num");
					this.Onleft_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bar_revision_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bar_revision_id
		{
			get
			{
				return this._bar_revision_id;
			}
			set
			{
				if ((this._bar_revision_id != value))
				{
					this.Onbar_revision_idChanging(value);
					this.SendPropertyChanging();
					this._bar_revision_id = value;
					this.SendPropertyChanged("bar_revision_id");
					this.Onbar_revision_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="global_session_t_bar_revision_t", Storage="_global_session_t", ThisKey="daily_id", OtherKey="daily_id", IsForeignKey=true)]
		public global_session_t global_session_t
		{
			get
			{
				return this._global_session_t.Entity;
			}
			set
			{
				global_session_t previousValue = this._global_session_t.Entity;
				if (((previousValue != value) 
							|| (this._global_session_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._global_session_t.Entity = null;
						previousValue.bar_revision_ts.Remove(this);
					}
					this._global_session_t.Entity = value;
					if ((value != null))
					{
						value.bar_revision_ts.Add(this);
						this._daily_id = value.daily_id;
					}
					else
					{
						this._daily_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("global_session_t");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="items_table_bar_revision_t", Storage="_items_table", ThisKey="item_id", OtherKey="item_id", IsForeignKey=true)]
		public items_table items_table
		{
			get
			{
				return this._items_table.Entity;
			}
			set
			{
				items_table previousValue = this._items_table.Entity;
				if (((previousValue != value) 
							|| (this._items_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._items_table.Entity = null;
						previousValue.bar_revision_ts.Remove(this);
					}
					this._items_table.Entity = value;
					if ((value != null))
					{
						value.bar_revision_ts.Add(this);
						this._item_id = value.item_id;
					}
					else
					{
						this._item_id = default(string);
					}
					this.SendPropertyChanged("items_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
